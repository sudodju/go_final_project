1)  Создавая таску через фронт, пользователь отправляет POST запрос на сервер, где в базе данных автоматически создается соответствующий ID через autoincrement

2)  Допустим пользователь решил установить галку напротив "Каждый день", тогда правило повтора (колонка repeat в бд) устанавливается значение d 1, соответственно,
	проще всего задать константы для этих запросов, чтобы они автоматически записывались в колонку repeat
	
4)  NextDate - ЭТО НЕ api! Это просто функция для вычисления следующей даты какой либо таски, соответственно, нам не нужно париться как записать нужное значение в repeat
	на данном шаге диплома, а предположить, что в БД в repeat уже существует какой то ключ для повторения.
	
	Сперва нужно сделать sql запрос к базе SELECT date, repeat FROM scheduler WHERE id = ?, хотя нет, вероятно запрос будет делать API, а затем уже вызываться наша функция
	На данном этапе вообще забыли про sql и бд, считаем, что все данные просто прилетят на вход от некой api в будущем
	
	Итак: 4.1 Если правило не укзано if repeat == "", после того как ставится галка на выполнено, таска удаляется из БД в будущем
	
	      4.2 Можно жмыхнуть через switch-case или if, кстати, нужно взять строку из repeat и цифру (количество дней) и strconv.Atoi преобразовать ее в int,
			  перед этим разделить строку через strings.Split(), затем присвоить например переменной interval и высчитывать дату с этим числом

5)	Создание api/nextdate:
	В URL будут переданы параметры (now, dstart, repeat), их нужно вытащить через req.URL.Query
	Чекаем существует ли now и если нет, то присваиваем now time.Now()

	
	